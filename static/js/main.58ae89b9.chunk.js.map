{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","onSelect","userId","todos","useState","query","setQuery","selectValue","setSelectValue","className","type","onChange","event","target","value","id","loweredQuery","toLowerCase","filteredTodosByInput","filter","todo","title","includes","completed","prepearedTodos","map","classNames","htmlFor","readOnly","checked","onClick","getData","urlEnding","a","fetch","response","json","CurrentUser","onClear","user","setUser","useEffect","getUser","then","name","email","phone","App","selectedUserId","setSelectedUserId","setTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58ae89b9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './TodoList.scss';\n\ntype Props = {\n  onSelect: (userId: number) => void,\n  userId: number,\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({\n  onSelect,\n  userId,\n  todos,\n}) => {\n  const [query, setQuery] = useState('');\n  const [selectValue, setSelectValue] = useState('');\n\n  const prepearedTodos = () => {\n    const loweredQuery = query.toLowerCase();\n\n    const filteredTodosByInput = todos.filter(todo => (\n      todo.title.toLowerCase().includes(loweredQuery)\n    ));\n\n    switch (selectValue) {\n      case 'active':\n        return filteredTodosByInput.filter(todo => !todo.completed);\n      case 'completed':\n        return filteredTodosByInput.filter(todo => todo.completed);\n\n      default:\n        return filteredTodosByInput;\n    }\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <input\n        type=\"text\"\n        onChange={(event) => setQuery(event.target.value)}\n      />\n\n      <select\n        id=\"select\"\n        onChange={(event) => setSelectValue(event.target.value)}\n        value={selectValue}\n      >\n        <option value=\"all\">\n          All\n        </option>\n\n        <option value=\"active\">\n          Active\n        </option>\n\n        <option value=\"completed\">\n          Completed\n        </option>\n      </select>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {\n            prepearedTodos().map(todo => (\n              <li\n                className={classNames(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !todo.completed,\n                    'TodoList__item--checked': todo.completed,\n                  },\n                )}\n                key={todo.id}\n              >\n                <label htmlFor={`${todo.id}`}>\n                  <input\n                    id={`${todo.id}`}\n                    type=\"checkbox\"\n                    readOnly\n                    checked={todo.completed}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  className={classNames(\n                    'TodoList__user-button',\n                    'button',\n                    { 'TodoList__user-button--selected': todo.userId === userId },\n                  )}\n                  type=\"button\"\n                  onClick={() => onSelect(todo.userId)}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  );\n};\n","const API_URL = 'https://mate.academy/students-api/';\n\nconst getData = async (urlEnding: string) => {\n  const response = await fetch(`${API_URL}/${urlEnding}`);\n\n  return response.json();\n};\n\nexport const getTodos = (): Promise<Todo[]> => getData('todos');\n\nexport const getUser = (userId: number): Promise<User> => getData(`users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number,\n  onClear: (userId: number) => void,\n};\n\nexport const CurrentUser: React.FC<Props> = ({ userId, onClear }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser);\n  }, [userId]);\n\n  return user && (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${user?.id}`}</span></h2>\n\n      <h3 className=\"CurrentUser__name\">{user?.name}</h3>\n      <p className=\"CurrentUser__email\">{user?.email}</p>\n      <p className=\"CurrentUser__phone\">{user?.phone}</p>\n      <button\n        type=\"button\"\n        onClick={() => onClear(0)}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          onSelect={setSelectedUserId}\n          userId={selectedUserId}\n          todos={todos}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser userId={selectedUserId} onClear={setSelectedUserId} />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}